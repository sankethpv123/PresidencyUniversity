#include <Servo.h>

#define TRIGGER_PIN A0
#define ECHO_PIN A1

#define MOTOR1_ENABLE 3
#define MOTOR2_ENABLE 9
#define MOTOR1_IN1 4
#define MOTOR1_IN2 5
#define MOTOR2_IN3 6
#define MOTOR2_IN4 7

#define SERVO_PIN 8

Servo servoMotor;

void setup() {
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  pinMode(MOTOR1_ENABLE, OUTPUT);
  pinMode(MOTOR1_IN1, OUTPUT);
  pinMode(MOTOR1_IN2, OUTPUT);
  pinMode(MOTOR2_ENABLE, OUTPUT);
  pinMode(MOTOR2_IN3, OUTPUT);
  pinMode(MOTOR2_IN4, OUTPUT);

  servoMotor.attach(SERVO_PIN);
  
  Serial.begin(9600);
}

void loop() {
  // Read distance from ultrasonic sensor
  long duration, distance;
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
  duration = pulseIn(ECHO_PIN, HIGH);
  distance = duration * 0.034 / 2; // Calculate distance in cm
  
  // Control servo motor based on distance
  if (distance <= 30) {
    servoMotor.write(90); // Adjust angle for cleaning
  } else {
    servoMotor.write(0); // Reset angle
  }

  // Control motors based on distance
  if (distance <= 20) {
    // If obstacle detected, stop motors
    digitalWrite(MOTOR1_ENABLE, LOW);
    digitalWrite(MOTOR2_ENABLE, LOW);
  } else {
    // Otherwise, move forward
    digitalWrite(MOTOR1_ENABLE, HIGH);
    digitalWrite(MOTOR1_IN1, HIGH);
    digitalWrite(MOTOR1_IN2, LOW);
    digitalWrite(MOTOR2_ENABLE, HIGH);
    digitalWrite(MOTOR2_IN3, HIGH);
    digitalWrite(MOTOR2_IN4, LOW);
  }

  // Print distance to serial monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  delay(100); // Delay for stability
}
